---
# *arr Stack Docker Compose Configuration
# Updated for working AirVPN configuration

services:
  # Prowlarr - Indexer manager (through VPN)
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/prowlarr:/config
    network_mode: "service:gluetun"
    restart: unless-stopped
    depends_on:
      - gluetun

  # Sonarr - TV Series management
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/sonarr:/config
      - /mnt/media:/data
    ports:
      - "8989:8989"
    restart: unless-stopped
    depends_on:
      - gluetun

  # Radarr - Movie management
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/radarr:/config
      - /mnt/media:/data
    ports:
      - "7878:7878"
    restart: unless-stopped
    depends_on:
      - gluetun

  # Lidarr - Music management
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/lidarr:/config
      - /mnt/media:/data
    ports:
      - "8686:8686"
    restart: unless-stopped
    depends_on:
      - gluetun

  # Readarr - Book management (using ich777 image for amd64 support)
  readarr:
    image: ich777/readarr:latest
    container_name: readarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/readarr:/config
      - /mnt/media:/data
    ports:
      - "8787:8787"
    restart: unless-stopped
    depends_on:
      - gluetun

  # qBittorrent - Download client (through VPN)
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - WEBUI_PORT=8080
    volumes:
      - ./config/qbittorrent:/config
      - /mnt/media/torrents:/data/torrents
    network_mode: "service:gluetun"
    restart: unless-stopped
    depends_on:
      - gluetun

  # NZBGet - Usenet download client (through VPN)
  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/nzbget:/config
      - /mnt/media/usenet:/downloads
      - /mnt/media/usenet/intermediate:/intermediate-dir
    network_mode: "service:gluetun"
    restart: unless-stopped
    depends_on:
      - gluetun

  # Bazarr - Subtitle management
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/bazarr:/config
      - /mnt/media:/data
    ports:
      - "6767:6767"
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr

  # Notifiarr - Notification system
  notifiarr:
    image: golift/notifiarr:latest
    container_name: notifiarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/notifiarr:/config
    ports:
      - "5454:5454"
    restart: unless-stopped

  # Gluetun - VPN client
  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - VPN_TYPE=${VPN_TYPE}
      - FIREWALL_VPN_INPUT_PORTS=${FIREWALL_VPN_INPUT_PORTS}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PRESHARED_KEY=${WIREGUARD_PRESHARED_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - WIREGUARD_ENDPOINT_IP=${WIREGUARD_ENDPOINT_IP}
      - WIREGUARD_ENDPOINT_PORT=${WIREGUARD_ENDPOINT_PORT}
      # - SERVER_COUNTRIES=${SERVER_COUNTRIES}  # Using specific endpoint instead
      # - SERVER_CITIES=${SERVER_CITIES}        # Using specific endpoint instead
      - HEALTH_VPN_DURATION_INITIAL=${HEALTH_VPN_DURATION_INITIAL}
      - TZ=${TZ:-America/New_York}
    volumes:
      - ./config/gluetun:/gluetun
    ports:
      - "9696:9696"  # Prowlarr through VPN
      - "8080:8080"  # qBittorrent through VPN
      - "6881:6881"  # qBittorrent listen port
      - "6881:6881/udp"
      - "6789:6789"  # NZBGet through VPN
    restart: unless-stopped

  # Jellyseerr - Media request management for Jellyfin
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
    volumes:
      - ./config/jellyseerr:/app/config
    ports:
      - "5055:5055"
    restart: unless-stopped

  # Flaresolverr - Cloudflare bypass
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVER=none
      - TZ=America/New_York
    ports:
      - "8191:8191"
    restart: unless-stopped

networks:
  default:
    name: servarr
